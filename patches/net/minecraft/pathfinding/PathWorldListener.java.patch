--- ../src-base/minecraft/net/minecraft/pathfinding/PathWorldListener.java
+++ ../src-work/minecraft/net/minecraft/pathfinding/PathWorldListener.java
@@ -1,7 +1,12 @@
 package net.minecraft.pathfinding;
 
 import com.google.common.collect.Lists;
+
+import java.util.ArrayList;
+import java.util.Collections;
 import java.util.List;
+import java.util.concurrent.Executor;
+import java.util.concurrent.Executors;
 import javax.annotation.Nullable;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.entity.Entity;
@@ -16,36 +21,38 @@
 
 public class PathWorldListener implements IWorldEventListener
 {
-    private final List<PathNavigate> navigations = Lists.<PathNavigate>newArrayList();
+    private final List<PathNavigate> navigations = Collections.synchronizedList(Lists.<PathNavigate>newArrayList());
+    private final Executor asyncTaskExecutor = Executors.newSingleThreadExecutor();
 
     public void notifyBlockUpdate(World worldIn, BlockPos pos, IBlockState oldState, IBlockState newState, int flags)
     {
-        if (this.didBlockChange(worldIn, pos, oldState, newState))
-        {
-            int i = 0;
-
-            for (int j = this.navigations.size(); i < j; ++i)
+        this.asyncTaskExecutor.execute(()->{
+            if (this.didBlockChange(worldIn, pos, oldState, newState))
             {
-                PathNavigate pathnavigate = this.navigations.get(i);
-
-                if (pathnavigate != null && !pathnavigate.canUpdatePathOnTimeout())
+                final List<PathNavigate> copyList = new ArrayList<>(navigations);
+                int i = 0;
+                for (int j = copyList.size(); i < j; ++i)
                 {
-                    Path path = pathnavigate.getPath();
+                    PathNavigate pathnavigate = copyList.get(i);
 
-                    if (path != null && !path.isFinished() && path.getCurrentPathLength() != 0)
+                    if (pathnavigate != null && !pathnavigate.canUpdatePathOnTimeout())
                     {
-                        PathPoint pathpoint = pathnavigate.currentPath.getFinalPathPoint();
-                        double d0 = pos.distanceSq(((double)pathpoint.x + pathnavigate.entity.posX) / 2.0D, ((double)pathpoint.y + pathnavigate.entity.posY) / 2.0D, ((double)pathpoint.z + pathnavigate.entity.posZ) / 2.0D);
-                        int k = (path.getCurrentPathLength() - path.getCurrentPathIndex()) * (path.getCurrentPathLength() - path.getCurrentPathIndex());
+                        Path path = pathnavigate.getPath();
 
-                        if (d0 < (double)k)
+                        if (path != null && !path.isFinished() && path.getCurrentPathLength() != 0)
                         {
-                            pathnavigate.updatePath();
+                            PathPoint pathpoint = pathnavigate.currentPath.getFinalPathPoint();
+                            double d0 = pos.distanceSq(((double)pathpoint.x + pathnavigate.entity.posX) / 2.0D, ((double)pathpoint.y + pathnavigate.entity.posY) / 2.0D, ((double)pathpoint.z + pathnavigate.entity.posZ) / 2.0D);
+                            int k = (path.getCurrentPathLength() - path.getCurrentPathIndex()) * (path.getCurrentPathLength() - path.getCurrentPathIndex());
+                            if (d0 < (double)k)
+                            {
+                                pathnavigate.updatePath();
+                            }
                         }
                     }
                 }
             }
-        }
+        });
     }
 
     protected boolean didBlockChange(World worldIn, BlockPos pos, IBlockState oldState, IBlockState newState)
