--- ../src-base/minecraft/net/minecraft/world/gen/structure/MapGenStructure.java
+++ ../src-work/minecraft/net/minecraft/world/gen/structure/MapGenStructure.java
@@ -1,11 +1,12 @@
 package net.minecraft.world.gen.structure;
 
 import it.unimi.dsi.fastutil.longs.Long2ObjectMap;
-import it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap;
 import it.unimi.dsi.fastutil.objects.ObjectIterator;
 import java.util.Iterator;
 import java.util.Random;
 import javax.annotation.Nullable;
+
+import net.himeki.mcmtfabric.parallelised.fastutil.Long2ObjectConcurrentHashMap;
 import net.minecraft.crash.CrashReport;
 import net.minecraft.crash.CrashReportCategory;
 import net.minecraft.crash.ICrashReportDetail;
@@ -21,11 +22,11 @@
 public abstract class MapGenStructure extends MapGenBase
 {
     private MapGenStructureData structureData;
-    protected Long2ObjectMap<StructureStart> structureMap = new Long2ObjectOpenHashMap<StructureStart>(1024);
+    protected Long2ObjectMap<StructureStart> structureMap = new Long2ObjectConcurrentHashMap<>(1024);
 
     public abstract String getStructureName();
 
-    protected final synchronized void recursiveGenerate(World worldIn, final int chunkX, final int chunkZ, int originalX, int originalZ, ChunkPrimer chunkPrimerIn)
+    protected final void recursiveGenerate(World worldIn, final int chunkX, final int chunkZ, int originalX, int originalZ, ChunkPrimer chunkPrimerIn)
     {
         this.initializeStructureData(worldIn);
 
@@ -77,7 +78,7 @@
         }
     }
 
-    public synchronized boolean generateStructure(World worldIn, Random randomIn, ChunkPos chunkCoord)
+    public boolean generateStructure(World worldIn, Random randomIn, ChunkPos chunkCoord)
     {
         this.initializeStructureData(worldIn);
         int i = (chunkCoord.x << 4) + 8;
@@ -175,12 +176,17 @@
     {
         if (this.structureData == null && worldIn != null)
         {
-            this.structureData = (MapGenStructureData)worldIn.loadData(MapGenStructureData.class, this.getStructureName());
-
+            // Spigot Start
+            if (worldIn.spigotConfig.saveStructureInfo) {
+                this.structureData = (MapGenStructureData)worldIn.getPerWorldStorage().getOrLoadData(MapGenStructureData.class, this.getStructureName());
+            } else {
+                this.structureData = new MapGenStructureData(this.getStructureName());
+            }
+            // Spigot End
             if (this.structureData == null)
             {
                 this.structureData = new MapGenStructureData(this.getStructureName());
-                worldIn.setData(this.getStructureName(), this.structureData);
+                worldIn.getPerWorldStorage().setData(this.getStructureName(), this.structureData);
             }
             else
             {
