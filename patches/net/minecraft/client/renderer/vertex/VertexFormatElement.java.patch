--- ../src-base/minecraft/net/minecraft/client/renderer/vertex/VertexFormatElement.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/vertex/VertexFormatElement.java
@@ -9,12 +9,12 @@
 public class VertexFormatElement
 {
     private static final Logger LOGGER = LogManager.getLogger();
-    private final VertexFormatElement.EnumType type;
-    private final VertexFormatElement.EnumUsage usage;
+    private final EnumType type;
+    private final EnumUsage usage;
     private final int index;
     private final int elementCount;
 
-    public VertexFormatElement(int indexIn, VertexFormatElement.EnumType typeIn, VertexFormatElement.EnumUsage usageIn, int count)
+    public VertexFormatElement(int indexIn, EnumType typeIn, EnumUsage usageIn, int count)
     {
         if (this.isFirstOrUV(indexIn, usageIn))
         {
@@ -23,7 +23,7 @@
         else
         {
             LOGGER.warn("Multiple vertex elements of the same type other than UVs are not supported. Forcing type to UV.");
-            this.usage = VertexFormatElement.EnumUsage.UV;
+            this.usage = EnumUsage.UV;
         }
 
         this.type = typeIn;
@@ -31,17 +31,17 @@
         this.elementCount = count;
     }
 
-    private final boolean isFirstOrUV(int p_177372_1_, VertexFormatElement.EnumUsage p_177372_2_)
+    private final boolean isFirstOrUV(int p_177372_1_, EnumUsage p_177372_2_)
     {
-        return p_177372_1_ == 0 || p_177372_2_ == VertexFormatElement.EnumUsage.UV;
+        return p_177372_1_ == 0 || p_177372_2_ == EnumUsage.UV;
     }
 
-    public final VertexFormatElement.EnumType getType()
+    public final EnumType getType()
     {
         return this.type;
     }
 
-    public final VertexFormatElement.EnumUsage getUsage()
+    public final EnumUsage getUsage()
     {
         return this.usage;
     }
@@ -68,7 +68,7 @@
 
     public final boolean isPositionElement()
     {
-        return this.usage == VertexFormatElement.EnumUsage.POSITION;
+        return this.usage == EnumUsage.POSITION;
     }
 
     public boolean equals(Object p_equals_1_)
@@ -158,10 +158,17 @@
         NORMAL("Normal"),
         COLOR("Vertex Color"),
         UV("UV"),
+        // As of 1.8.8 - unused in vanilla; use GENERIC for now
+        @Deprecated
         MATRIX("Bone Matrix"),
+        @Deprecated
         BLEND_WEIGHT("Blend Weight"),
-        PADDING("Padding");
+        PADDING("Padding"),
+        GENERIC("Generic");
 
+        public void preDraw(VertexFormat format, int element, int stride, java.nio.ByteBuffer buffer) { net.minecraftforge.client.ForgeHooksClient.preDraw(this, format, element, stride, buffer); }
+        public void postDraw(VertexFormat format, int element, int stride, java.nio.ByteBuffer buffer) { net.minecraftforge.client.ForgeHooksClient.postDraw(this, format, element, stride, buffer); }
+
         private final String displayName;
 
         private EnumUsage(String displayNameIn)
