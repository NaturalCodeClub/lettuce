--- ../src-base/minecraft/net/minecraft/client/renderer/block/model/BakedQuadRetextured.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/block/model/BakedQuadRetextured.java
@@ -12,7 +12,7 @@
 
     public BakedQuadRetextured(BakedQuad quad, TextureAtlasSprite textureIn)
     {
-        super(Arrays.copyOf(quad.getVertexData(), quad.getVertexData().length), quad.tintIndex, FaceBakery.getFacingFromVertexData(quad.getVertexData()), quad.getSprite());
+        super(Arrays.copyOf(quad.getVertexData(), quad.getVertexData().length), quad.tintIndex, FaceBakery.getFacingFromVertexData(quad.getVertexData()), quad.getSprite(), quad.applyDiffuseLighting, quad.format);
         this.texture = textureIn;
         this.remapQuad();
     }
@@ -21,9 +21,16 @@
     {
         for (int i = 0; i < 4; ++i)
         {
-            int j = 7 * i;
-            this.vertexData[j + 4] = Float.floatToRawIntBits(this.texture.getInterpolatedU((double)this.sprite.getUnInterpolatedU(Float.intBitsToFloat(this.vertexData[j + 4]))));
-            this.vertexData[j + 4 + 1] = Float.floatToRawIntBits(this.texture.getInterpolatedV((double)this.sprite.getUnInterpolatedV(Float.intBitsToFloat(this.vertexData[j + 4 + 1]))));
+            int j = format.getIntegerSize() * i;
+            int uvIndex = format.getUvOffsetById(0) / 4;
+            this.vertexData[j + uvIndex] = Float.floatToRawIntBits(this.texture.getInterpolatedU((double)this.sprite.getUnInterpolatedU(Float.intBitsToFloat(this.vertexData[j + uvIndex]))));
+            this.vertexData[j + uvIndex + 1] = Float.floatToRawIntBits(this.texture.getInterpolatedV((double)this.sprite.getUnInterpolatedV(Float.intBitsToFloat(this.vertexData[j + uvIndex + 1]))));
         }
     }
+
+    @Override
+    public TextureAtlasSprite getSprite()
+    {
+        return texture;
+    }
 }
