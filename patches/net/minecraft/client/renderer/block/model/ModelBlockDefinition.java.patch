--- ../src-base/minecraft/net/minecraft/client/renderer/block/model/ModelBlockDefinition.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/block/model/ModelBlockDefinition.java
@@ -28,15 +28,20 @@
 public class ModelBlockDefinition
 {
     @VisibleForTesting
-    static final Gson GSON = (new GsonBuilder()).registerTypeAdapter(ModelBlockDefinition.class, new ModelBlockDefinition.Deserializer()).registerTypeAdapter(Variant.class, new Variant.Deserializer()).registerTypeAdapter(VariantList.class, new VariantList.Deserializer()).registerTypeAdapter(Multipart.class, new Multipart.Deserializer()).registerTypeAdapter(Selector.class, new Selector.Deserializer()).create();
+    static final Gson GSON = (new GsonBuilder()).registerTypeAdapter(ModelBlockDefinition.class, new Deserializer()).registerTypeAdapter(Variant.class, new Variant.Deserializer()).registerTypeAdapter(VariantList.class, new VariantList.Deserializer()).registerTypeAdapter(Multipart.class, new Multipart.Deserializer()).registerTypeAdapter(Selector.class, new Selector.Deserializer()).create();
     private final Map<String, VariantList> mapVariants = Maps.<String, VariantList>newHashMap();
     private Multipart multipart;
 
+    @Deprecated
     public static ModelBlockDefinition parseFromReader(Reader reader)
     {
-        return (ModelBlockDefinition)JsonUtils.fromJson(GSON, reader, ModelBlockDefinition.class);
+        return parseFromReader(reader, null);
     }
 
+    public static ModelBlockDefinition parseFromReader(Reader reader, net.minecraft.util.ResourceLocation location) {
+        return net.minecraftforge.client.model.BlockStateLoader.load(reader, location, GSON);
+    }
+
     public ModelBlockDefinition(Map<String, VariantList> variants, Multipart multipartIn)
     {
         this.multipart = multipartIn;
@@ -75,7 +80,7 @@
 
         if (variantlist == null)
         {
-            throw new ModelBlockDefinition.MissingVariantException();
+            throw new MissingVariantException();
         }
         else
         {
