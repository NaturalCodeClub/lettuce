--- ../src-base/minecraft/net/minecraft/block/BlockStoneBrick.java
+++ ../src-work/minecraft/net/minecraft/block/BlockStoneBrick.java
@@ -12,27 +12,27 @@
 
 public class BlockStoneBrick extends Block
 {
-    public static final PropertyEnum<BlockStoneBrick.EnumType> VARIANT = PropertyEnum.<BlockStoneBrick.EnumType>create("variant", BlockStoneBrick.EnumType.class);
-    public static final int DEFAULT_META = BlockStoneBrick.EnumType.DEFAULT.getMetadata();
-    public static final int MOSSY_META = BlockStoneBrick.EnumType.MOSSY.getMetadata();
-    public static final int CRACKED_META = BlockStoneBrick.EnumType.CRACKED.getMetadata();
-    public static final int CHISELED_META = BlockStoneBrick.EnumType.CHISELED.getMetadata();
+    public static final PropertyEnum<EnumType> VARIANT = PropertyEnum.<EnumType>create("variant", EnumType.class);
+    public static final int DEFAULT_META = EnumType.DEFAULT.getMetadata();
+    public static final int MOSSY_META = EnumType.MOSSY.getMetadata();
+    public static final int CRACKED_META = EnumType.CRACKED.getMetadata();
+    public static final int CHISELED_META = EnumType.CHISELED.getMetadata();
 
     public BlockStoneBrick()
     {
         super(Material.ROCK);
-        this.setDefaultState(this.blockState.getBaseState().withProperty(VARIANT, BlockStoneBrick.EnumType.DEFAULT));
+        this.setDefaultState(this.blockState.getBaseState().withProperty(VARIANT, EnumType.DEFAULT));
         this.setCreativeTab(CreativeTabs.BUILDING_BLOCKS);
     }
 
     public int damageDropped(IBlockState state)
     {
-        return ((BlockStoneBrick.EnumType)state.getValue(VARIANT)).getMetadata();
+        return ((EnumType)state.getValue(VARIANT)).getMetadata();
     }
 
     public void getSubBlocks(CreativeTabs itemIn, NonNullList<ItemStack> items)
     {
-        for (BlockStoneBrick.EnumType blockstonebrick$enumtype : BlockStoneBrick.EnumType.values())
+        for (EnumType blockstonebrick$enumtype : EnumType.values())
         {
             items.add(new ItemStack(this, 1, blockstonebrick$enumtype.getMetadata()));
         }
@@ -40,12 +40,12 @@
 
     public IBlockState getStateFromMeta(int meta)
     {
-        return this.getDefaultState().withProperty(VARIANT, BlockStoneBrick.EnumType.byMetadata(meta));
+        return this.getDefaultState().withProperty(VARIANT, EnumType.byMetadata(meta));
     }
 
     public int getMetaFromState(IBlockState state)
     {
-        return ((BlockStoneBrick.EnumType)state.getValue(VARIANT)).getMetadata();
+        return ((EnumType)state.getValue(VARIANT)).getMetadata();
     }
 
     protected BlockStateContainer createBlockState()
@@ -60,7 +60,7 @@
         CRACKED(2, "cracked_stonebrick", "cracked"),
         CHISELED(3, "chiseled_stonebrick", "chiseled");
 
-        private static final BlockStoneBrick.EnumType[] META_LOOKUP = new BlockStoneBrick.EnumType[values().length];
+        private static final EnumType[] META_LOOKUP = new EnumType[values().length];
         private final int meta;
         private final String name;
         private final String unlocalizedName;
@@ -82,7 +82,7 @@
             return this.name;
         }
 
-        public static BlockStoneBrick.EnumType byMetadata(int meta)
+        public static EnumType byMetadata(int meta)
         {
             if (meta < 0 || meta >= META_LOOKUP.length)
             {
@@ -104,7 +104,7 @@
 
         static
         {
-            for (BlockStoneBrick.EnumType blockstonebrick$enumtype : values())
+            for (EnumType blockstonebrick$enumtype : values())
             {
                 META_LOOKUP[blockstonebrick$enumtype.getMetadata()] = blockstonebrick$enumtype;
             }
