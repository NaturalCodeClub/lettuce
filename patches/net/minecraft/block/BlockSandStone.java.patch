--- ../src-base/minecraft/net/minecraft/block/BlockSandStone.java
+++ ../src-work/minecraft/net/minecraft/block/BlockSandStone.java
@@ -15,23 +15,23 @@
 
 public class BlockSandStone extends Block
 {
-    public static final PropertyEnum<BlockSandStone.EnumType> TYPE = PropertyEnum.<BlockSandStone.EnumType>create("type", BlockSandStone.EnumType.class);
+    public static final PropertyEnum<EnumType> TYPE = PropertyEnum.<EnumType>create("type", EnumType.class);
 
     public BlockSandStone()
     {
         super(Material.ROCK);
-        this.setDefaultState(this.blockState.getBaseState().withProperty(TYPE, BlockSandStone.EnumType.DEFAULT));
+        this.setDefaultState(this.blockState.getBaseState().withProperty(TYPE, EnumType.DEFAULT));
         this.setCreativeTab(CreativeTabs.BUILDING_BLOCKS);
     }
 
     public int damageDropped(IBlockState state)
     {
-        return ((BlockSandStone.EnumType)state.getValue(TYPE)).getMetadata();
+        return ((EnumType)state.getValue(TYPE)).getMetadata();
     }
 
     public void getSubBlocks(CreativeTabs itemIn, NonNullList<ItemStack> items)
     {
-        for (BlockSandStone.EnumType blocksandstone$enumtype : BlockSandStone.EnumType.values())
+        for (EnumType blocksandstone$enumtype : EnumType.values())
         {
             items.add(new ItemStack(this, 1, blocksandstone$enumtype.getMetadata()));
         }
@@ -44,12 +44,12 @@
 
     public IBlockState getStateFromMeta(int meta)
     {
-        return this.getDefaultState().withProperty(TYPE, BlockSandStone.EnumType.byMetadata(meta));
+        return this.getDefaultState().withProperty(TYPE, EnumType.byMetadata(meta));
     }
 
     public int getMetaFromState(IBlockState state)
     {
-        return ((BlockSandStone.EnumType)state.getValue(TYPE)).getMetadata();
+        return ((EnumType)state.getValue(TYPE)).getMetadata();
     }
 
     protected BlockStateContainer createBlockState()
@@ -63,7 +63,7 @@
         CHISELED(1, "chiseled_sandstone", "chiseled"),
         SMOOTH(2, "smooth_sandstone", "smooth");
 
-        private static final BlockSandStone.EnumType[] META_LOOKUP = new BlockSandStone.EnumType[values().length];
+        private static final EnumType[] META_LOOKUP = new EnumType[values().length];
         private final int metadata;
         private final String name;
         private final String unlocalizedName;
@@ -85,7 +85,7 @@
             return this.name;
         }
 
-        public static BlockSandStone.EnumType byMetadata(int meta)
+        public static EnumType byMetadata(int meta)
         {
             if (meta < 0 || meta >= META_LOOKUP.length)
             {
@@ -107,7 +107,7 @@
 
         static
         {
-            for (BlockSandStone.EnumType blocksandstone$enumtype : values())
+            for (EnumType blocksandstone$enumtype : values())
             {
                 META_LOOKUP[blocksandstone$enumtype.getMetadata()] = blocksandstone$enumtype;
             }
