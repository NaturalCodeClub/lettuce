--- ../src-base/minecraft/net/minecraft/entity/ai/EntityAITasks.java
+++ ../src-work/minecraft/net/minecraft/entity/ai/EntityAITasks.java
@@ -11,8 +11,8 @@
 public class EntityAITasks
 {
     private static final Logger LOGGER = LogManager.getLogger();
-    public final Set<EntityAITasks.EntityAITaskEntry> taskEntries = Sets.<EntityAITasks.EntityAITaskEntry>newLinkedHashSet();
-    private final Set<EntityAITasks.EntityAITaskEntry> executingTaskEntries = Sets.<EntityAITasks.EntityAITaskEntry>newLinkedHashSet();
+    public final Set<EntityAITaskEntry> taskEntries = Sets.<EntityAITaskEntry>newConcurrentHashSet();
+    private final Set<EntityAITaskEntry> executingTaskEntries = Sets.<EntityAITaskEntry>newConcurrentHashSet();
     private final Profiler profiler;
     private int tickCount;
     private int tickRate = 3;
@@ -25,16 +25,16 @@
 
     public void addTask(int priority, EntityAIBase task)
     {
-        this.taskEntries.add(new EntityAITasks.EntityAITaskEntry(priority, task));
+        this.taskEntries.add(new EntityAITaskEntry(priority, task));
     }
 
     public void removeTask(EntityAIBase task)
     {
-        Iterator<EntityAITasks.EntityAITaskEntry> iterator = this.taskEntries.iterator();
+        Iterator<EntityAITaskEntry> iterator = this.taskEntries.iterator();
 
         while (iterator.hasNext())
         {
-            EntityAITasks.EntityAITaskEntry entityaitasks$entityaitaskentry = iterator.next();
+            EntityAITaskEntry entityaitasks$entityaitaskentry = iterator.next();
             EntityAIBase entityaibase = entityaitasks$entityaitaskentry.action;
 
             if (entityaibase == task)
@@ -58,7 +58,7 @@
 
         if (this.tickCount++ % this.tickRate == 0)
         {
-            for (EntityAITasks.EntityAITaskEntry entityaitasks$entityaitaskentry : this.taskEntries)
+            for (EntityAITaskEntry entityaitasks$entityaitaskentry : this.taskEntries)
             {
                 if (entityaitasks$entityaitaskentry.using)
                 {
@@ -79,11 +79,11 @@
         }
         else
         {
-            Iterator<EntityAITasks.EntityAITaskEntry> iterator = this.executingTaskEntries.iterator();
+            Iterator<EntityAITaskEntry> iterator = this.executingTaskEntries.iterator();
 
             while (iterator.hasNext())
             {
-                EntityAITasks.EntityAITaskEntry entityaitasks$entityaitaskentry1 = iterator.next();
+                EntityAITaskEntry entityaitasks$entityaitaskentry1 = iterator.next();
 
                 if (!this.canContinue(entityaitasks$entityaitaskentry1))
                 {
@@ -100,7 +100,7 @@
         {
             this.profiler.startSection("goalTick");
 
-            for (EntityAITasks.EntityAITaskEntry entityaitasks$entityaitaskentry2 : this.executingTaskEntries)
+            for (EntityAITaskEntry entityaitasks$entityaitaskentry2 : this.executingTaskEntries)
             {
                 entityaitasks$entityaitaskentry2.action.updateTask();
             }
@@ -109,12 +109,12 @@
         }
     }
 
-    private boolean canContinue(EntityAITasks.EntityAITaskEntry taskEntry)
+    private boolean canContinue(EntityAITaskEntry taskEntry)
     {
         return taskEntry.action.shouldContinueExecuting();
     }
 
-    private boolean canUse(EntityAITasks.EntityAITaskEntry taskEntry)
+    private boolean canUse(EntityAITaskEntry taskEntry)
     {
         if (this.executingTaskEntries.isEmpty())
         {
@@ -126,7 +126,7 @@
         }
         else
         {
-            for (EntityAITasks.EntityAITaskEntry entityaitasks$entityaitaskentry : this.executingTaskEntries)
+            for (EntityAITaskEntry entityaitasks$entityaitaskentry : this.executingTaskEntries)
             {
                 if (entityaitasks$entityaitaskentry != taskEntry)
                 {
@@ -148,7 +148,7 @@
         }
     }
 
-    private boolean areTasksCompatible(EntityAITasks.EntityAITaskEntry taskEntry1, EntityAITasks.EntityAITaskEntry taskEntry2)
+    private boolean areTasksCompatible(EntityAITaskEntry taskEntry1, EntityAITaskEntry taskEntry2)
     {
         return (taskEntry1.action.getMutexBits() & taskEntry2.action.getMutexBits()) == 0;
     }
@@ -200,7 +200,7 @@
             }
             else
             {
-                return p_equals_1_ != null && this.getClass() == p_equals_1_.getClass() ? this.action.equals(((EntityAITasks.EntityAITaskEntry)p_equals_1_).action) : false;
+                return p_equals_1_ != null && this.getClass() == p_equals_1_.getClass() ? this.action.equals(((EntityAITaskEntry)p_equals_1_).action) : false;
             }
         }
 
